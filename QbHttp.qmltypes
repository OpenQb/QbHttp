import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable Qb.Http 1.0'

Module {
    dependencies: ["QtQuick 2.12"]
    Component {
        name: "QbHttp::QbHttpServer"
        prototype: "QObject"
        exports: ["Qb.Http/QbHttpServer 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "QbHttpServerMode"
            values: {
                "DYNAMIC": 0,
                "STATIC": 1,
                "MULTI_FOLDER_STATIC": 2
            }
        }
        Property { name: "host"; type: "string" }
        Property { name: "port"; type: "int" }
        Property { name: "minThreads"; type: "int" }
        Property { name: "maxThreads"; type: "int" }
        Property { name: "cleanupInterval"; type: "int" }
        Property { name: "readTimeout"; type: "int" }
        Property { name: "maxRequestSize"; type: "int" }
        Property { name: "maxMultiPartSize"; type: "int" }
        Property { name: "docRoot"; type: "string" }
        Property { name: "encoding"; type: "string" }
        Property { name: "cacheMaxAge"; type: "int" }
        Property { name: "cacheTime"; type: "int" }
        Property { name: "cacheSize"; type: "int" }
        Property { name: "maxCachedFileSize"; type: "int" }
        Property { name: "callBack"; type: "string" }
        Property { name: "serverJsPath"; type: "string" }
        Property { name: "templateFilePath"; type: "string" }
        Property { name: "serverCode"; type: "string" }
        Property { name: "serverMode"; type: "QbHttpServerMode" }
        Signal {
            name: "listenIpAddress"
            Parameter { name: "ipaddress"; type: "string" }
        }
        Signal {
            name: "logMessage"
            Parameter { name: "message"; type: "string" }
        }
        Signal {
            name: "portChanged"
            Parameter { name: "port"; type: "int" }
        }
        Signal {
            name: "docRootChanged"
            Parameter { name: "docRoot"; type: "string" }
        }
        Signal {
            name: "hostChanged"
            Parameter { name: "host"; type: "string" }
        }
        Signal {
            name: "minThreadsChanged"
            Parameter { name: "minThreads"; type: "int" }
        }
        Signal {
            name: "maxThreadsChanged"
            Parameter { name: "maxThreads"; type: "int" }
        }
        Signal {
            name: "cleanupIntervalChanged"
            Parameter { name: "cleanupInterval"; type: "int" }
        }
        Signal {
            name: "readTimeoutChanged"
            Parameter { name: "readTimeout"; type: "int" }
        }
        Signal {
            name: "maxRequestSizeChanged"
            Parameter { name: "maxRequestSize"; type: "int" }
        }
        Signal {
            name: "maxMultiPartSizeChanged"
            Parameter { name: "maxMultiPartSize"; type: "int" }
        }
        Signal {
            name: "encodingChanged"
            Parameter { name: "encoding"; type: "string" }
        }
        Signal {
            name: "cacheMaxAgeChanged"
            Parameter { name: "cacheMaxAge"; type: "int" }
        }
        Signal {
            name: "cacheTimeChanged"
            Parameter { name: "cacheTime"; type: "int" }
        }
        Signal {
            name: "cacheSizeChanged"
            Parameter { name: "cacheSize"; type: "int" }
        }
        Signal {
            name: "maxCachedFileSizeChanged"
            Parameter { name: "maxCachedFileSize"; type: "int" }
        }
        Signal {
            name: "callBackChanged"
            Parameter { name: "callBack"; type: "QJSValue" }
        }
        Signal {
            name: "serverJsPathChanged"
            Parameter { name: "serverJsPath"; type: "string" }
        }
        Signal {
            name: "serverModeChanged"
            Parameter { name: "serverMode"; type: "QbHttpServerMode" }
        }
        Signal {
            name: "templateFilePathChanged"
            Parameter { name: "templateFilePath"; type: "string" }
        }
        Signal {
            name: "serverCodeChanged"
            Parameter { name: "serverCode"; type: "string" }
        }
        Method { name: "listen" }
        Method { name: "stop" }
        Method {
            name: "setCallBack"
            Parameter { name: "callBack"; type: "string" }
        }
        Method {
            name: "addStaticRootFolder"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method { name: "clearStaticRootFolder" }
        Method {
            name: "setPort"
            Parameter { name: "port"; type: "int" }
        }
        Method {
            name: "setDocRoot"
            Parameter { name: "docRoot"; type: "string" }
        }
        Method {
            name: "setHost"
            Parameter { name: "host"; type: "string" }
        }
        Method {
            name: "setMinThreads"
            Parameter { name: "minThreads"; type: "int" }
        }
        Method {
            name: "setMaxThreads"
            Parameter { name: "maxThreads"; type: "int" }
        }
        Method {
            name: "setCleanupInterval"
            Parameter { name: "cleanupInterval"; type: "int" }
        }
        Method {
            name: "setReadTimeout"
            Parameter { name: "readTimeout"; type: "int" }
        }
        Method {
            name: "setMaxRequestSize"
            Parameter { name: "maxRequestSize"; type: "int" }
        }
        Method {
            name: "setMaxMultiPartSize"
            Parameter { name: "maxMultiPartSize"; type: "int" }
        }
        Method {
            name: "setEncoding"
            Parameter { name: "encoding"; type: "string" }
        }
        Method {
            name: "setCacheMaxAge"
            Parameter { name: "cacheMaxAge"; type: "int" }
        }
        Method {
            name: "setCacheTime"
            Parameter { name: "cacheTime"; type: "int" }
        }
        Method {
            name: "setCacheSize"
            Parameter { name: "cacheSize"; type: "int" }
        }
        Method {
            name: "setMaxCachedFileSize"
            Parameter { name: "maxCachedFileSize"; type: "int" }
        }
        Method {
            name: "setServerJsPath"
            Parameter { name: "serverJsPath"; type: "string" }
        }
        Method {
            name: "setServerMode"
            Parameter { name: "serverMode"; type: "QbHttpServerMode" }
        }
        Method {
            name: "setTemplateFilePath"
            Parameter { name: "templateFilePath"; type: "string" }
        }
        Method {
            name: "setServerCode"
            Parameter { name: "serverCode"; type: "string" }
        }
    }
}
